{"version":3,"file":"static/js/376.a6dfd8ed.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Layout.styled.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toUpperCase().includes(filter.toUpperCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  width: 450px;\n  height: auto;\n\n  padding: 10px;\n  margin-bottom: 20px;\n\n  border: 2px solid black;\n`;\n\nexport const Lable = styled.label`\n  display: flex;\n\n  gap: 5px;\n\n  font-weight: 500;\n  font-size: 20px;\n\n  margin-bottom: 25px;\n\n  flex-direction: column;\n`;\n\nexport const Field = styled(FormikField)`\n  width: 250px;\n  height: 30px;\n\n  font-weight: 500;\n  font-size: 16px;\n\n  padding: 0 5px;\n\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  outline: rgba(0, 0, 0, 0);\n\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus,\n  :hover {\n    border: 3px solid #2196f3;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  min-height: 30px;\n\n  font-weight: 500;\n  font-size: 18px;\n\n  background-color: black;\n  color: white;\n\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 8px;\n  outline: rgba(0, 0, 0, 0);\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus,\n  :hover {\n    color: #2196f3;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 18px;\n\n  color: red;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { toast } from 'react-toastify';\nimport {\n  Form,\n  Lable,\n  Field,\n  Button,\n  ErrorMessage,\n} from 'components/ContactForm/ContactForm.styled';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required'),\n  phone: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = newContact => {\n    const exist = contacts.find(\n      contact => contact.name.toUpperCase() === newContact.name.toUpperCase()\n    );\n\n    if (!exist) {\n      dispatch(addContact(newContact));\n\n      return;\n    }\n    toast.info(`${newContact.name} is already in contacts`);\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', phone: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Lable>\n          Name\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"p\" />\n        </Lable>\n\n        <Lable>\n          Nunber\n          <Field type=\"tel\" name=\"phone\" />\n          <ErrorMessage name=\"phone\" component=\"p\" />\n        </Lable>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 450px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  align-items: center;\n\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 80px;\n  min-height: 30px;\n\n  margin: 0;\n\n  font-weight: 500;\n  font-size: 18px;\n\n  border-radius: 8px;\n\n  background-color: black;\n  color: white;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus,\n  :hover {\n    color: #2196f3;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport {\n  List,\n  Item,\n  Text,\n  Button,\n} from 'components/ContactList/ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(({ id, name, phone }) => (\n        <Item key={id}>\n          <Text>\n            {name}: {phone}\n          </Text>\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  width: 450px;\n\n  gap: 5px;\n\n  font-weight: 500;\n  font-size: 20px;\n\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 30px;\n\n  font-weight: 500;\n  font-size: 16px;\n\n  padding: 0 5px;\n\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  outline: rgba(0, 0, 0, 0);\n\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus,\n  :hover {\n    border: 3px solid #2196f3;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Label, Input } from 'components/Filter/Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" name=\"filter\" onChange={handleFilter} />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2023;\n`;\n","import { BallTriangle } from 'react-loader-spinner';\nimport { Overlay } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Overlay>\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#000000\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n    </Overlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  flex-direction: column;\n\n  height: 100vh;\n`;\n\nexport const Title1 = styled.h1`\n  text-align: start;\n\n  margin-bottom: 10px;\n\n  width: 450px;\n\n  font-size: 40px;\n`;\n\nexport const Title2 = styled.h2`\n  text-align: start;\n\n  margin-bottom: 10px;\n\n  width: 450px;\n\n  font-size: 30px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { GlobalStyle } from 'components/GlobalStyle';\nimport { Layout, Title1, Title2 } from 'components/Layout.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Layout>\n      <GlobalStyle />\n      <Title1>Phonebook</Title1>\n      <ContactForm />\n\n      <Title2>Contacts</Title2>\n      <Filter />\n      <ContactList />\n      {isLoading && <Loader />}\n    </Layout>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","name","toUpperCase","includes","Form","styled","FormikForm","Lable","Field","FormikField","Button","ErrorMessage","FormikError","ContactSchema","Yup","shape","matches","required","phone","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","newContact","find","contact","toast","addContact","resetForm","type","component","List","Item","Text","ContactList","map","id","onClick","deleteContact","Label","Input","Filter","onChange","value","target","setFilter","Overlay","Loader","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","Layout","Title1","Title2","Contacts","useEffect","fetchContacts","GlobalStyle"],"sourceRoot":""}